from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup

from core.database.database import get_all_id_admin


def start(user_id: int) -> InlineKeyboardMarkup:
    buttons = [
        [
            InlineKeyboardButton(text="‚ÑπÔ∏è –û —Å—Ç—É–¥–∏–∏", callback_data="description"),
            InlineKeyboardButton(text="‚≠ïÔ∏èüõé –ù–∞—à–∏ —É—Å–ª—É–≥–∏", callback_data="services")
        ],
        [InlineKeyboardButton(text="üí† –ë–æ–Ω—É—Å—ã", callback_data="bonuses")],
        [InlineKeyboardButton(text="üì± –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ", callback_data="contacts")],
        [InlineKeyboardButton(text="üåê –ú—ã –≤ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç—è—Ö", callback_data="social_network")],
        [InlineKeyboardButton(text="üìç –ì–¥–µ –º—ã –Ω–∞—Ö–æ–¥–∏–º—Å—è", callback_data="address")],
        [InlineKeyboardButton(text="‚è≥ –ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã", callback_data="working_hours")],
        [InlineKeyboardButton(text="‚ùî –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å", callback_data="question")],
    ]
    if user_id in (get_all_id_admin()):
        buttons.append([InlineKeyboardButton(text='‚≠êÔ∏è –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É', callback_data="admin")])
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard


def to_return(name_service: str, user_id: int = None):
    """call_data: start"""
    buttons = [[InlineKeyboardButton(text="‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è", callback_data="start")]]
    if user_id in (get_all_id_admin()):
        buttons.append([InlineKeyboardButton(text='‚≠êÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å', callback_data=f"edit_{name_service}")])
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard


def url_btn(data: dict, user_id: int) -> InlineKeyboardMarkup:
    buttons = [
        [InlineKeyboardButton(text=data["text"], url=data["link"])],
        [InlineKeyboardButton(text="‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è", callback_data="start")]
    ]
    if user_id in (get_all_id_admin()):
        buttons.append([InlineKeyboardButton(text='‚≠êÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å', callback_data="edit_contact")])
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard


def social_network_btn(data_VK: dict, data_TG: dict, data_Site: dict, data_inst: dict, user_id: int) -> InlineKeyboardMarkup:
    buttons = [
        [InlineKeyboardButton(text=data_Site["text"], url=data_Site["link"])],
        [InlineKeyboardButton(text=data_TG["text"], url=data_TG["link"])],
        [InlineKeyboardButton(text=data_VK["text"], url=data_VK["link"])],
        [InlineKeyboardButton(text=data_inst["text"], url=data_inst["link"])],
        [InlineKeyboardButton(text="‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è", callback_data="start")]
    ]
    if user_id in (get_all_id_admin()):
        buttons.append([InlineKeyboardButton(text='‚≠êÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å', callback_data="edit_social_network")])
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard


def question_btn() -> InlineKeyboardMarkup:
    buttons = [
        [InlineKeyboardButton(text="üì± –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ", callback_data="contacts")],
        [InlineKeyboardButton(text="‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è", callback_data="start")]
    ]
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard


def check_up() -> InlineKeyboardMarkup:
    buttons = [
        [
            InlineKeyboardButton(text="üü¢ –î–∞", callback_data="yes"),
            InlineKeyboardButton(text="üî¥ –ù–µ—Ç", callback_data="no")
        ],
        [InlineKeyboardButton(text="‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è", callback_data="start")]
    ]
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard


def menu_service():
    buttons = [
        [InlineKeyboardButton(text="‚≠ïÔ∏è–£—Ä–æ–∫–∏ –ø–æ –ø–µ—Å–æ—á–Ω–æ–π –∞–Ω–∏–º–∞—Ü–∏–∏", callback_data="start")],
        [InlineKeyboardButton(text="‚≠ïÔ∏è–ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã –ø–æ —Ä–∏—Å–æ–≤–∞–Ω–∏—é –∞–∫—Ä–∏–ª–æ–º", callback_data="start")],
        [
            InlineKeyboardButton(text="‚≠ïÔ∏è–ö—É—Ä—Å —é–Ω—ã—Ö –ª–µ–¥–∏ ", callback_data="start"),
            InlineKeyboardButton(text="‚≠ïÔ∏è–ö—É—Ä—Å —é–Ω—ã—Ö –¥–∂–µ–Ω—Ç–ª—å–º–µ–Ω–æ–≤", callback_data="start")
        ],
        [InlineKeyboardButton(text="‚≠ïÔ∏è–í—ã–µ–∑–¥–Ω—ã–µ –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã –ø–æ —Ä–∏—Å–æ–≤–∞–Ω–∏—é", callback_data="start")],
        [InlineKeyboardButton(text="‚≠ïÔ∏è–ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã –ø–æ –ø–æ—à–∏–≤—É –∏–∑–¥–µ–ª–∏–π –∏–∑ —Ç—Ä–∏–∫–æ—Ç–∞–∂–∞", callback_data="start")],
        [InlineKeyboardButton(text="‚≠ïÔ∏è–ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å –ø–æ —Ä–∏—Å–æ–≤–∞–Ω–∏—é –Ω–∞ —Å–ø–∏–ª–µ –¥–µ—Ä–µ–≤–∞", callback_data="start")],
        [InlineKeyboardButton(text="‚≠ïÔ∏è–°—ä–µ–¥–æ–±–Ω–∞—è –º–∞—Å—Ç–µ—Ä—Å–∫–∞—è", callback_data="start")],
        [InlineKeyboardButton(text="‚≠ïÔ∏è–î–Ω–∏ –†–æ–∂–¥–µ–Ω–∏—è", callback_data="start")],
        [InlineKeyboardButton(text="‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è", callback_data="start")],
    ]
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard


def state_cancel() -> InlineKeyboardBuilder:
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ", callback_data="state_cancel"))
    return builder


def custom_btn(text: str, cldata: str):
    buttons = [[InlineKeyboardButton(text=text, callback_data=cldata)]]
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard
