from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup

from core.settings import settings


def admin_menu(user_id: int) -> InlineKeyboardMarkup:
    buttons = [
        [InlineKeyboardButton(text="üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏", callback_data="users")],
        [InlineKeyboardButton(text="üí¨ –ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ", callback_data="edit_start_mess")],
        [InlineKeyboardButton(text="üîÅ –°–º–µ–Ω–∏—Ç—å —á–∞—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤", callback_data="new_chat")],
        [InlineKeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å —É—Å–ª—É–≥—É", callback_data="add_service")],
    ]
    if user_id == settings.bots.admin_id:
        buttons.append([InlineKeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∞", callback_data="add_admin"),
                        InlineKeyboardButton(text="–£–¥–∞–ª–∏—Ç—å –∞–¥–º–∏–Ω–∞", callback_data="del_admin")])
    buttons.append([InlineKeyboardButton(text="–í –º–µ–Ω—é", callback_data="start")])
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard


def confirmation(txt_y: str = "üü¢ –î–∞", txt_n: str = "üî¥ –ù–µ—Ç", cd_y: str = "yes", cd_n: str = "no", canc_data: str = "start"):
    buttons = [
        [
            InlineKeyboardButton(text=txt_y, callback_data=cd_y),
            InlineKeyboardButton(text=txt_n, callback_data=cd_n)
        ],
        [InlineKeyboardButton(text="‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è", callback_data=canc_data)]
    ]
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard


def cancel_admin(calldata_return: str = "admin"):
    buttons = [[InlineKeyboardButton(text="‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è", callback_data=calldata_return)]]
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard


def del_admin(admins: dict):
    buttons = []
    for i in admins.keys():
        buttons.append([InlineKeyboardButton(text=admins[i], callback_data=f"del_{i}")])
    buttons.append([InlineKeyboardButton(text="‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è", callback_data="start")])
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard


def custom_btn(text: str, cldata: str):
    buttons = [[InlineKeyboardButton(text=text, callback_data=cldata)]]
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard


def edit_btn_with_photo(type_mess: str, callback_data: str = "start"):
    buttons = [
        [InlineKeyboardButton(text="üñº –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è", callback_data=f"edit_photo_{type_mess}")],
        [InlineKeyboardButton(text="üî§ –¢–µ–∫—Å—Ç", callback_data=f"edit_text_{type_mess}")],
        [InlineKeyboardButton(text="‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è", callback_data=callback_data)]
    ]
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard


def edit_btn_with_text(type_mess: str, callback_data: str = "start"):
    buttons = [
        [InlineKeyboardButton(text="üî§ –¢–µ–∫—Å—Ç", callback_data=f"edit_text_{type_mess}")],
        [InlineKeyboardButton(text="‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è", callback_data=callback_data)]
    ]
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard


def edit_btn_for_contact():
    buttons = [
        [InlineKeyboardButton(text="üî§ –¢–µ–∫—Å—Ç", callback_data=f"edit_text_contact")],
        [InlineKeyboardButton(text="üî§ –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏", callback_data=f"edit_btn_text_watsapp")],
        [InlineKeyboardButton(text="üî§ –°—Å—ã–ª–∫—É –∫–Ω–æ–ø–∫–∏", callback_data=f"edit_btn_link_watsapp")],
        [InlineKeyboardButton(text="‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è", callback_data="contacts")]
    ]
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard


def edit_btn_for_social_network(btn1: str, btn2: str, btn3: str, btn4: str):
    buttons = [
        [
            InlineKeyboardButton(text="üî§ –¢–µ–∫—Å—Ç 1 –∫–Ω–æ–ø–∫–∏", callback_data=f"edit_btn_text_{btn1}"),
            InlineKeyboardButton(text="üî§ –°—Å—ã–ª–∫—É 1 –∫–Ω–æ–ø–∫–∏", callback_data=f"edit_btn_link_{btn1}")
        ],
        [
            InlineKeyboardButton(text="üî§ –¢–µ–∫—Å—Ç 2 –∫–Ω–æ–ø–∫–∏", callback_data=f"edit_btn_text_{btn2}"),
            InlineKeyboardButton(text="üî§ –°—Å—ã–ª–∫—É 2 –∫–Ω–æ–ø–∫–∏", callback_data=f"edit_btn_link_{btn2}")
        ],
        [
            InlineKeyboardButton(text="üî§ –¢–µ–∫—Å—Ç 3 –∫–Ω–æ–ø–∫–∏", callback_data=f"edit_btn_text_{btn3}"),
            InlineKeyboardButton(text="üî§ –°—Å—ã–ª–∫—É 3 –∫–Ω–æ–ø–∫–∏", callback_data=f"edit_btn_link_{btn3}")
        ],
        [
            InlineKeyboardButton(text="üî§ –¢–µ–∫—Å—Ç 4 –∫–Ω–æ–ø–∫–∏", callback_data=f"edit_btn_text_{btn4}"),
            InlineKeyboardButton(text="üî§ –°—Å—ã–ª–∫—É 4 –∫–Ω–æ–ø–∫–∏", callback_data=f"edit_btn_link_{btn4}")
        ],
        [InlineKeyboardButton(text="‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è", callback_data="social_network")]
    ]
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard


def edit_service(type_mess: str):
    buttons = [
        [InlineKeyboardButton(text="üñº –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è", callback_data=f"edit_s_photo_{type_mess}")],
        [InlineKeyboardButton(text="üî§ –ù–∞–∑–≤–∞–Ω–∏–µ", callback_data=f"edit_s_name_{type_mess}")],
        [InlineKeyboardButton(text="üî§ –û–ø–∏—Å–∞–Ω–∏–µ", callback_data=f"edit_s_text_{type_mess}")],
        [InlineKeyboardButton(text="üî§ –°—Ç–æ–∏–º–æ—Å—Ç—å", callback_data=f"edit_s_amount_{type_mess}")],
        [InlineKeyboardButton(text="‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è", callback_data="service_" + type_mess)]
    ]
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard


def choice_amount_id(data: list):
    buttons = []
    for i in range(len(data)):
        buttons.append([InlineKeyboardButton(text=data[i]["name_amount"] + ": " + str(data[i]["amount"]),
                                             callback_data=f"amount_{data[i]['id']}")])
    buttons.append([InlineKeyboardButton(text="‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è", callback_data="services")])
    return InlineKeyboardMarkup(inline_keyboard=buttons)
